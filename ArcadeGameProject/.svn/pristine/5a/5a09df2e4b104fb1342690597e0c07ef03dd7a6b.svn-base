
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.imageio.ImageIO;

public class Hero extends GameObject {

	// ======= Important Objects ======= \\
	private int directionx;
	private int directiony;
	public Shooter newShooter;
	public int livesLeft = 5;

	// ======= Hero Constructor ======= \\

	public Hero(Point initialPosition, World world, String name) {
		super(initialPosition, world, name);
		this.hit = false;

	}

	@Override
	public void moveBy(int dx, int dy) {
		this.directionx = dx;
		this.directiony = dy;
		this.hit = false;

		for (Rock r : this.world.rocks) {
			if (Math.abs(this.centerPoint.x + dx - r.getCenterPoint().x) < 40
					&& Math.abs(this.centerPoint.y + dy - r.getCenterPoint().y) < 40) {
				hit = true;
			}
		}
		for (Monster m : this.world.monsters) {
			if (Math.abs(this.centerPoint.x + dx - m.getCenterPoint().x) < 40
					&& Math.abs(this.centerPoint.y + dy - m.getCenterPoint().y) < 40) {
				hit = true;
			}
		}
		if (this.hit == false && this.getCenterPoint().getX() + dx > 10 && this.getCenterPoint().getX() + dx < 470
				&& this.getCenterPoint().getY() + dy > 10 && this.getCenterPoint().getY() + dy < 470) {
			this.centerPoint = new Point(centerPoint.x + dx, centerPoint.y + dy);
			this.newShooter = new Shooter(new Point(this.centerPoint.x + 40, this.centerPoint.y), this.world,
					"shooter");
		}
	}

	// ======= Other Methods ======= \\

	@Override
	public void timePassed() {
		if (this.name == "hero") {
			this.newShooter = new Shooter(new Point(this.centerPoint.x + 40, this.centerPoint.y), this.world,
					"shooter");
		} else if (this.name == "heroLeft") {
			this.newShooter = new Shooter(new Point(this.centerPoint.x - 40, this.centerPoint.y), this.world,
					"shooter");
		} else if (this.name == "heroUp") {
			this.newShooter = new Shooter(new Point(this.centerPoint.x, this.centerPoint.y - 40), this.world,
					"shooter1");
		} else if (this.name == "heroDown") {
			this.newShooter = new Shooter(new Point(this.centerPoint.x, this.centerPoint.y + 40), this.world,
					"shooter1");
		}
	}

	@Override
	public void die() {
		if (this.livesLeft > 0) {
			this.livesLeft--;
			this.world.changeLevel(0);
		} else {
			System.out.println("Game Over!");
			try {
				this.world.setToLevel(1);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}

	}
}
