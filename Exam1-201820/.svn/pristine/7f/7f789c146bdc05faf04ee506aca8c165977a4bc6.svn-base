import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

import org.junit.Test;

public class MapAnd2DArrayProblemsTest {

	@Test
	public void testZeroDiagonals() {
		
		int[][] test1 = { { 1 } };
		int[][] expected1 = { {0 } };
		MapAnd2DArrayProblems.zeroDiagonals(test1);
		assertArrayEquals(expected1, test1);
		
		int[][] test2 = { { 0, 1 }, { 2, 3 } };
		int[][] expected2 = { { 0,0 }, { 0,0 }};
		MapAnd2DArrayProblems.zeroDiagonals(test2);
		assertArrayEquals(expected2, test2);
		
		int[][] test3 = { { 0, 1, 2}, 
						  { 2, 3, 7},
						  { 4, 5, 8}};
		int[][] expected3 = { { 0, 1, 0}, 
							  { 2, 0, 7},
							  { 0, 5, 0}};
		MapAnd2DArrayProblems.zeroDiagonals(test3);
		assertArrayEquals(expected3, test3);
		
		int[][] test4 = {{1, 1, 2, 3}, 
				         {5, 8, 1, 3}, 
				         {2, 1, 3, 4}, 
				         {5, 5, 8, 9}};

		int[][] expected4 = {{0, 1, 2, 0}, 
					         {5, 0, 0, 3}, 
					         {2, 0, 0, 4}, 
					         {0, 5, 8, 0}};
		MapAnd2DArrayProblems.zeroDiagonals(test4);
		assertArrayEquals(expected4, test4);
		
		int[][] test5 = {{1, 0, 3, 0, 0}, 
				         {1, 1, 2, 0, 0}, 
				         {1, 1, 6, 1, 0}, 
				         {3, 4, 7, 5, 6},
				         {3, 6, 2, 1, 3}};
		
		int[][] expected5 = {{0, 0, 3, 0, 0}, 
					         {1, 0, 2, 0, 0}, 
					         {1, 1, 0, 1, 0}, 
					         {3, 0, 7, 0, 6},
					         {0, 6, 2, 1, 0}};
		MapAnd2DArrayProblems.zeroDiagonals(test5);
		assertArrayEquals(expected5, test5);
			
	}

	
	@Test
	public void testMaxFirstLetterCount() {
		ArrayList<String> words0 = new ArrayList<String>();
		assertEquals(0, MapAnd2DArrayProblems.maxFirstLetterCount(words0));
		
		ArrayList<String> words1 = new ArrayList<String>();
		words1.add("adam");
		words1.add("bob");
		words1.add("banana");
		words1.add("baby");
		words1.add("chalk");
		words1.add("candy");
		assertEquals(3, MapAnd2DArrayProblems.maxFirstLetterCount(words1));
		
		ArrayList<String> words2 = new ArrayList<String>();
		words2.add("adam");
		words2.add("bob");
		words2.add("charlie");
		words2.add("daniel");
		words2.add("edward");
		words2.add("fern");
		assertEquals(1, MapAnd2DArrayProblems.maxFirstLetterCount(words2));
		
		
		ArrayList<String> words3 = new ArrayList<String>();
		words3.add("zen");
		words3.add("zero");
		words3.add("xerox");
		words3.add("xenon");
		words3.add("jump");
		words3.add("juggle");
		assertEquals(2, MapAnd2DArrayProblems.maxFirstLetterCount(words3));
		
		ArrayList<String> words4 = new ArrayList<String>();
		words4.add("sarah");
		words4.add("sand");
		words4.add("silly");
		words4.add("sound");
		words4.add("see");
		words4.add("seat");
		assertEquals(6, MapAnd2DArrayProblems.maxFirstLetterCount(words4));
		
		
	}

}
