import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.imageio.ImageIO;
import javax.swing.JComponent;


public class DigDugComponent extends JComponent {

	
	private World world;
	private BufferedImage image;

	public DigDugComponent() {
		this.world = new World(this);
	}

	@Override
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g;
		// makes things look slightly prettier
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		
//		drawDrawable(g2, this.world);
//
//		List<Drawable> drawableParts = this.world.getDrawableParts();
//		for (Drawable d : drawableParts) {
//			drawDrawable(g2, d);
//		}
		
		this.drawBackground(g2);
		this.drawLevel(g2);
		getWorld().getRock().drawRock(g2);
		getWorld().getFygar().drawFygar(g2);
		getWorld().getHero().drawHero(g2);
	}



	public ArrayList<BlackSpace> getBlackSpaces() {
		return this.getWorld().blackSpaces;
	}

	private void drawLevel(Graphics2D graphics) {
		this.getWorld().drawLevel(graphics);
	}
	
	private void drawBackground(Graphics2D g2) {
		this.getWorld().drawBackground(g2);
	}

	public World getWorld() {
		return world;
	}
}