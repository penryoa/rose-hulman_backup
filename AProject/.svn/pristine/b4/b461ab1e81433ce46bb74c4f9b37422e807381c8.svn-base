import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.imageio.ImageIO;
import javax.swing.JComponent;

public class DigDugComponent extends JComponent {

	private int level = 1;
	private BufferedImage image;
	private Hero hero;
	private Fygar monster;
	private Rock rock;
	public ArrayList<BlackSpace> blackSpaces;
	private final Shape background;

	public DigDugComponent() {
		try {
			this.image = ImageIO.read(new File("bkgd1.png"));
		} catch (IOException e) {
			throw new RuntimeException("Error drawing dirt: " + e);
		}
		hero = new Hero(new Point(200, 500));
		this.rock = new Rock(new Point(300, 300));
		this.monster = new Fygar(new Point(100, 100), this);
		BlackSpace blackSpace = new BlackSpace(hero.position);
		this.blackSpaces = new ArrayList<BlackSpace>();
		blackSpaces.add(blackSpace);
		this.background = new Rectangle2D.Double(0, 0, 620, 620);
		
		
	}

	@Override
	protected void paintComponent(Graphics g) {

		super.paintComponent(g);

		Graphics2D g2 = (Graphics2D) g;

		// makes things look slightly prettier
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
		this.drawBackground(g2);
		drawLevel(g2);

		rock.drawRock(g2);
		monster.drawFygar(g2);
		hero.drawHero(g2);

	}

	public Hero getHero() {
		return hero;
	}
	
	public MovingObject getMonster() {
		return monster;
	}

	public ArrayList<BlackSpace> getBlackSpaces() {
		return this.blackSpaces;
	}

	public void drawLevel(Graphics2D g2) {
		g2.drawImage(this.image, 20, 120, null);
		for (int i = 0; i < blackSpaces.size(); i++) {
			blackSpaces.get(i).drawBlackSpace(g2);
		}

	}

	public void changeLevel(int num) {
		this.level += num;
		if (this.level >= 1 && this.level <= 4) {
			try {
				this.image = ImageIO.read(new File("bkgd" + this.level + ".png"));
				blackSpaces.clear();
				drawLevel((Graphics2D) this.getGraphics());

				hero.position = new Point(200, 500);
				BlackSpace blackSpace = new BlackSpace(hero.position);
				blackSpaces.add(blackSpace);
				rock.drawRock((Graphics2D) this.getGraphics());
				monster.drawFygar((Graphics2D) this.getGraphics());
				hero.drawHero((Graphics2D) this.getGraphics());

			} catch (IOException e) {
				throw new RuntimeException("Error drawing dirt: " + e);
			}
		} else {
			System.out.println("no level");
		}
	}
	
	public void drawBackground(Graphics2D g2){
		g2.setColor(Color.BLACK);
		g2.draw(background);
		g2.fill(background);
	}
}