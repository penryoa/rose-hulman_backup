
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.geom.Point2D;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.Scanner;

public class Level {
	int count;
	FileReader currentLevel;
	ArrayList<Point2D> monsterLocations;
	ArrayList<Point2D> blackSpaces;
	ArrayList<Point2D> tunnelLocations;

	public Level(Graphics2D g2) throws IOException {
		this.count = 1;
		this.monsterLocations = new ArrayList<Point2D>();
		this.blackSpaces = new ArrayList<Point2D>();
		this.tunnelLocations = new ArrayList<Point2D>();
		resetLevel();
	}

	public int getCurrentLevel() {
		return this.count;
	}

	public void resetLevel() throws IOException {
		this.currentLevel = new FileReader("Level " + count);
		Scanner s = new Scanner(currentLevel);

		while (s.hasNext()) {
			System.out.println(s.next());
			if (s.nextLine().startsWith("M")) {
				ArrayList<Integer> temp = new ArrayList<Integer>();
				if (!s.next().equals(")")) {
					temp.add(s.nextInt());
				}
				this.monsterLocations.add(new Point(temp.get(0), temp.get(1)));
				System.out.println("X: " + monsterLocations.get(0).getX() + "      Y: " + "X: " + monsterLocations.get(0).getY());
			}
			
			else if (s.nextLine().startsWith("T")) {

			}
			else if (s.nextLine().startsWith("R")) {

			}
		}
		
		this.currentLevel.close();
		
	}

	public void nextLevel() throws IOException {
		if (this.count < 5) {
			this.count += 1;
			resetLevel();
		}
	}

	public void lastLevel() throws IOException {
		if (this.count > 1) {
			this.count = this.count - 1;
			resetLevel();
		}
	}
}
