
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.JComponent;

public class DigDugComponent extends JComponent {
	
	private int level=1;
	private BufferedImage image;
	private Dirt dirt;
	private Hero hero;
	private BlackSpace blackSpace;
	private Background background;

	public DigDugComponent() {
		try {
			this.image = ImageIO.read(new File("bkgd1.png"));
		} catch (IOException e) {
			throw new RuntimeException("Error drawing dirt: " + e);
		}
		dirt = new Dirt();
		hero = new Hero(new Point(200, 500));
		blackSpace = new BlackSpace(hero.position);
		background = new Background();
	}

	@Override
	protected void paintComponent(Graphics g) {

		super.paintComponent(g);

		Graphics2D g2 = (Graphics2D) g;

		// makes things look slightly prettier
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

		background.drawBackground(g2);
		blackSpace.drawBlackSpace(g2);
		drawLevel(g2);
		hero.drawHero(g2);

	}

	public Hero getHero() {
		return hero;
	}
	

	public BlackSpace getBlackSpace() {
		return blackSpace;
	}
	
	public void drawLevel(Graphics2D g2){
		g2.drawImage(this.image,0, 0, null);
	}
	
	public void changeLevel(int num){
		this.level+=num;
		try {
			this.image = ImageIO.read(new File("bkgd"+this.level+".png"));
		} catch (IOException e) {
			throw new RuntimeException("Error drawing dirt: " + e);
		}
	}

}